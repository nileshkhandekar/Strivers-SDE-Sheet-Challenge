//Merge Sorted Array --> Leetcode
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
       for(int i=m; i<m+n; i++)
           nums1[i] = nums2[i-m];
  
        Arrays.sort(nums1);
    }
}

//Merge Two Sorted Arrays without extra space 
class Solution
{
    public static void merge(long arr1[], long arr2[], int n, int m) 
    {
        int len = (n+m);
        int gap = (len/2)+(len%2);
        
        while(gap > 0)
        {
            int left = 0;
            int right = left+gap;
            
            while(right < len)
            {
                //arr1 and arr2
                if(left<n && right>=n)
                {
                    if(arr1[left] > arr2[right-n])
                        swap(arr1,arr2,left,right-n);
                }
                //arr1 and arr1
                else if(right < n)
                {
                    if(arr1[left] > arr1[right])
                        swap(arr1,arr1,left,right);
                }
                //arr2 and arr2
                else if(left >= n)
                {
                    if(arr2[left-n] > arr2[right-n])
                        swap(arr2,arr2,left-n,right-n);
                }
                
                left++;
                right++;
            }
            
            if(gap == 1)
                break;
            
            gap = (gap/2) + (gap%2);
        }
    }
    
    public static void swap(long arr1[], long arr2[], int i, int j)
    {
        long temp = arr1[i];
        arr1[i] = arr2[j];
        arr2[j] = temp;
    }
}
